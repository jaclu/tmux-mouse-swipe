#!/bin/sh
__version="1.3.0 2021-10-12"
#
#   Copyright (c) 2021: Jacob.Lundqvist@gmail.com for date see __version above
#   License: MIT
#
#   Part of https://github.com/jaclu/tmux_common
#
#   Version: $__version
#       lot of cleanup and improved handle_up to make sure there was sideways motion
#     1.2.1 2021-10-11
#       corrected single window display-message to use simpler params for vers < 3.2
#     1.2.0 2021-10-11
#       Reworked logic to better detect invalid conditions, and
#       to deal with them.
#     1.1.2 2021-10-11
#       Some further tweaks to optimize performance on slow systems
#     1.1.1 2021-10-11
#       using cache file for status to reduce lag on slow systems
#     1.1.0 2021-10-11
#       Made comparison compliant with shellcheck recomendations
#     1.0.6 2021-09-29"
#       Udpdated info when detected tmux version is < 3.0
#     1.0.5 2021-09-28"
#       Initial deploy
#
#   This enables changing tmux window by pressing the right button
#   then left - right swiping to indicate requested direction.
#
app_name="tmux_mouse_swiping"


#
#   Tmux only keeps track of mouse_x inside panes.
#   If you are depending on right click swipes in your apps,
#   then this utility might not be for you.
#

action_name="$1"
mouse_x="$2"

# VERSION_LIMIT
# ok 3.0
#    2.9a no mouse_x support, so limited functionality,
#            always swiping the same direction
#    2.1  no suppoer for MouseDragEnd3Pane, using MouseUp3 instead doesn't help
#    2.2  is the lowest version with even limited useability.
min_version="3.0"
env_untested="untested"
env_incompatible="incompat"
no_drag=0
single_window=-1

drag_status_cache="/tmp/drag_status_cache"
log_file="/tmp/tmux_mouse_swiping.log"


debug() {
    return # uncomment if you want to see a log of what is happening
    echo "$(date) $1" >> $log_file
}


t_drag_status_set() {
    status="$1"
    push_it="$2"

    echo "$status" > "$drag_status_cache"
    drag_status="$status"
    if [ "$push_it" = "1" ]; then
        tmux set-option -s @mouse_drag_status "$1"
    fi
}


t_drag_status_get() {
    if [ -f "$drag_status_cache" ]; then
	drag_status="$(cat $drag_status_cache)"
    else
	ds_prel="$(tmux show -s @mouse_drag_status)"
	drag_status="$(echo "$ds_prel"|cut -d' ' -f 2)"
    fi
}


incompatible_env() {
    msg="$1"
    if [ "$drag_status" != $env_incompatible ]; then
	echo " "
	echo "$app_name vers: $__version Detected an incompatible environment, and is now disabled"
	echo "Details should be bellow, press Escape when you have read this."
	echo "If you want to use this with limited functionality, change â”‚min_version in this script"
	echo "acordingly."
	echo " "
	drag_status=$env_incompatible
	t_drag_status_set "$drag_status" 1
    fi
    debug "***Incompatability: $msg"
    echo "$msg"
}


env_check() {
    vers="$(tmux -V |cut -d' ' -f 2)" # extra for debug, remove soon!
    t_drag_status_get
    if [ "$drag_status" = "$env_incompatible" ]; then
	echo "env incompatible"
	exit 0
    elif [ "$drag_status" = "$env_untested" ]; then
	if [ -z "$vers" ]; then
	    incompatible_env "Can not detect the running tmux version, this tool neeeds at least tmux vers: $min_version"
	    incompatible_env "Since it can't be detected to not be compatible, it will now be activated, but no guarantee it will work."
	    t_drag_status_set "$no_drag"
	    return
	fi
	if  expr "'$vers" \< "'3.0"   > /dev/null ; then
	    incompatible_env "vers < 3.0 no mouse_x support, so this utility can not work properly"
	fi
	if  expr "'$vers" \< "'$min_version"   > /dev/null ; then
	    incompatible_env "tmux $vers < min vers: $min_version"
	    exit 0
	fi
	drag_status=$no_drag
    fi
    windows="$(tmux list-windows -F '#{window_id}' | wc -l)"
    if [ "$windows" -lt 2 ]; then
        msg="Only 1 window, can't switch"
	if  expr "'$vers" \< "'3.2"   > /dev/null ; then
    	    tmux display-message "$msg"
	else
	    tmux display-message -N -d 1500 "$msg"
	fi
	drag_status=$single_window # block window switch
    else
	drag_status="$mouse_x"  #  Start drag detected
    fi
    t_drag_status_set "$drag_status"
}

handle_up() {
    prev_drag_status="$drag_status"
    
    if [ -f "$drag_status_cache" ]; then
	rm "$drag_status_cache"
    else
	t_drag_status_set "$no_drag"  # reset it even if we dont move windows
    fi

    case "$prev_drag_status" in
	"$env_incompatible" | "$single_window" | "$no_drag" )
	    return
    esac
    
    if [ "$mouse_x" -lt "$prev_drag_status" ]; then
	debug "will switch to the left"
	tmux select-window -p
    elif [ "$mouse_x" -gt "$prev_drag_status" ]; then
	# second check ensures no window switch if right button is clicked
	# and no sideways motion is detected
	debug "will switch to the right"
	tmux select-window -n
    fi
}


#================================================================
#
#   Main
#

t_drag_status_get

if [ "$drag_status" = "$env_untested" ]; then
    env_check
fi
     
#debug "action: [$action_name]  drag start: [$drag_status]  mouse x: [$mouse_x]"

if [ "$action_name" = "down" ] && [ "$drag_status" = "$no_drag" ]; then
    t_drag_status_set "$mouse_x"
elif [ "$action_name" = "up" ]; then
    handle_up    
fi
